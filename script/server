#!/usr/bin/env node
var tilelive  = require('tilelive'),
    mbtiles   = require('mbtiles'),
    minimist  = require('minimist'),
    fs        = require('fs'),
    path      = require('path'),
    express   = require('express')

const argv     = minimist(process.argv.slice(2)),
      tiledir  = argv.mbtiles,
      styledir = argv.styles,
      port     = argv.port || 4326,
      pattern  = /^\/(\d+)\/(\d+)\/(\d+).pbf$/,
      app      = express()

// This script requires a tile directory and style directory
if(!tiledir || !styledir)
  return console.log('Usage: ' + path.basename(__filename) +
    ' --mbtiles /path/to/mbtiles/parent/directory' +
    ' --styles /path/to/styles/parent/directory' +
    ' --port [optional port | 4326]')

mbtiles.registerProtocols(tilelive)

// Add support for CORS
app.use(cors)

// Serve files from style directory as static assets
app.use('/styles', express.static(styledir))

// Naively generate a [TileJSON](https://github.com/mapbox/tilejson-spec/tree/master/2.1.0#2-file-format)
// url from the given style and source.  MapBox can use these URLs to composite
// custom layers over MapBox base layers
app.get('/tilejson/:style/:source.json', function(req, res) {
  var style = req.params.style,
      source = req.params.source,
      json, out

  try {
    json = JSON.parse(fs.readFileSync(path.resolve(path.join(styledir, style + '.json'))))
    out  = json.sources[source]
    out.tilejson = '2.1.0'
    out.name = source
    return res.json(out)
  } catch (e) {
    return res.status(500).end(e.message)
  }
})

// Serve the requested tile from the requested mbtiles tileset
app.get('/tiles/:name/:z/:x/:y.pbf', function(req, res) {
  var params = req.params,
      name    = params.name,
      z       = params.z,
      x       = params.x,
      y       = params.y,
      tileurl = 'mbtiles://' + path.resolve(path.join(tiledir, name + '.mbtiles'))

  console.log('Loading: %s.  Tile z: %s, x: %s, y: %s', tileurl, z, x, y)

  tilelive.load(tileurl, function(err, source) {
    if(err) return res.status(500).send("mbtiles file " + name + " doesn't exist")

    source.getTile(z, x, y, function(err, tile, headers) {
      if(err) return res.status(404).send(err.message + ' in ' + name)
      res.set(headers)
      return res.end(tile)
    })
  })
})

// Start the server on the given port
var server = app.listen(port, function() {
  var addr = server.address(),
      host = addr.address,
      port = addr.port

  console.log('Cartile at your service on //%s:%s', host, port)
})

// Support Cross-Origin Resource Sharing
//
// req - An express request
// res - An express response
// next - object for passing control to next handler
//
// Returns nothing
function cors(req, res, next) {
  res.header('Access-Control-Allow-Origin', '*')
  res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept')
  next()
}
